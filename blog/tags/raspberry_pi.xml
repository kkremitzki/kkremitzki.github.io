<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Biosystems Engineering Blog (Posts about raspberry_pi)</title><link>https://kkremitzki.github.io/</link><description></description><atom:link rel="self" type="application/rss+xml" href="/blog/tags/raspberry_pi.xml"></atom:link><language>en</language><lastBuildDate>Mon, 17 Jul 2017 21:34:48 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Linux Console Caps/Escape Swap</title><link>/blog/linux-console-capsescape-swap/</link><dc:creator>Kurt Kremitzki</dc:creator><description>&lt;div&gt;&lt;p&gt;Full-fledged Linux desktop environments like GNOME or Ubuntu's Unity often have built-in keyboard mapping tools to meet user needs.
At a lower level, &lt;tt class="docutils literal"&gt;xmodmap&lt;/tt&gt; can be used to directly modify the X11 server's keyboard mapping.
However, when working directly in the Linux console, things are a little more complicated without a display server.&lt;/p&gt;
&lt;p&gt;My particular need is to swap the &lt;tt class="docutils literal"&gt;Caps Lock&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;Escape&lt;/tt&gt; keys; as a &lt;tt class="docutils literal"&gt;vim&lt;/tt&gt; user, I use &lt;tt class="docutils literal"&gt;Escape&lt;/tt&gt; constantly to return to Normal mode.
To be more efficient and avoid the possibility of repetitive strain injury from long-term pinky stretching to reach &lt;tt class="docutils literal"&gt;Escape&lt;/tt&gt;, the following line
can be added to the file &lt;tt class="docutils literal"&gt;/etc/rc.local&lt;/tt&gt;, before the final line &lt;tt class="docutils literal"&gt;exit 0&lt;/tt&gt;.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_36d2d57faa9c4dbdb655bb6d753a151c-1"&gt;&lt;/a&gt;/usr/bin/dumpkeys &lt;span class="p"&gt;|&lt;/span&gt; /bin/sed &lt;span class="s1"&gt;'s/CtrlL_Lock/Escape/'&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; /usr/bin/loadkeys
&lt;/pre&gt;&lt;p&gt;If you aren't familiar with Bash, a little explanation might be in order. First, note that this single-line command is actually three
commands separated by the pipe character &lt;tt class="docutils literal"&gt;|&lt;/tt&gt;.
A detailed explanation can be found in the &lt;a class="reference external" href="http://www.tldp.org/LDP/abs/html/io-redirection.html"&gt;Advanced Bash Scripting Guide's chapter on I/O Redirection&lt;/a&gt;, but in short,
piping &lt;tt class="docutils literal"&gt;cmd1 | cmd2&lt;/tt&gt; sends the output of &lt;tt class="docutils literal"&gt;cmd&lt;/tt&gt; as input for &lt;tt class="docutils literal"&gt;cmd2&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;The programs &lt;tt class="docutils literal"&gt;/usr/bin/dumpkeys&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/usr/bin/loadkeys&lt;/tt&gt; are fairly self-explanatory: they output keymaps for the console
at the kernel level, and update that keymap if a valid file is input, respectively.
The middle command, &lt;tt class="docutils literal"&gt;sed&lt;/tt&gt;, is a powerful, general-purpose stream editor, and the source of much Linux wizardry. To understand what it's doing,
take a look at its argument: the string &lt;tt class="docutils literal"&gt;'/s/CtrlL_Lock/Escape/'&lt;/tt&gt;. This tells &lt;tt class="docutils literal"&gt;sed&lt;/tt&gt; to &lt;em&gt;s&lt;/em&gt; ubstitute the first instance of &lt;tt class="docutils literal"&gt;CtrlL_Lock&lt;/tt&gt;
with &lt;tt class="docutils literal"&gt;Escape&lt;/tt&gt; on any matching line from its input (adding &lt;tt class="docutils literal"&gt;g&lt;/tt&gt; after the last slash makes it a truly global substitution and not linewise.)
The &lt;tt class="docutils literal"&gt;sed&lt;/tt&gt; command then passes along the modified stream to &lt;tt class="docutils literal"&gt;loadkeys&lt;/tt&gt;. Because this line is added to &lt;tt class="docutils literal"&gt;/etc/rc.local&lt;/tt&gt;, it will be executed
every boot, swapping &lt;tt class="docutils literal"&gt;Caps Lock&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;Escape&lt;/tt&gt; in the Linux console.&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>raspberry_pi</category><guid>/blog/linux-console-capsescape-swap/</guid><pubDate>Wed, 18 May 2016 03:40:12 GMT</pubDate></item><item><title>Connecting a Raspberry Pi to Texas A&amp;M Wifi via Command Line</title><link>/blog/connecting-a-raspberry-pi-to-texas-am-wifi/</link><dc:creator>Kurt Kremitzki</dc:creator><description>&lt;div&gt;&lt;p&gt;The recommended flavor of Linux on the Raspberry Pi, Raspbian, uses the LXDE desktop environment, and using its GUI tools to set up wifi is not immediately successful.
Command-line setup involves editing two files, &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;/etc/wpa_supplicant/wpa_supplicant.conf&lt;/tt&gt;. Since these are system files, they won't be writable by a normal user. The command &lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;-e&lt;/span&gt; &amp;lt;filename&amp;gt;&lt;/tt&gt; can be used to edit system files with superuser privileges, using the default editor. Normally, this is the program &lt;tt class="docutils literal"&gt;nano&lt;/tt&gt;, which is fairly self-explanatory; make your changes using the keyboard and save the file with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Ctrl-X&lt;/span&gt;&lt;/tt&gt;. For advanced users, this can be changed via something like &lt;tt class="docutils literal"&gt;export EDITOR=vi&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;The first file, &lt;tt class="docutils literal"&gt;/etc/network/interfaces&lt;/tt&gt;, needs to have the following:&lt;/p&gt;
&lt;p&gt;&lt;a href="/blog/connecting-a-raspberry-pi-to-texas-am-wifi/"&gt;Read moreâ€¦&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>raspberry_pi</category><guid>/blog/connecting-a-raspberry-pi-to-texas-am-wifi/</guid><pubDate>Thu, 21 Apr 2016 23:46:17 GMT</pubDate></item></channel></rss>