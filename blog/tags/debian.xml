<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Biosystems Engineering Blog (Posts about debian)</title><link>https://kkremitzki.github.io/</link><description></description><atom:link href="/blog/tags/debian.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 09 Nov 2018 06:20:49 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Free Software Activities in October 2018</title><link>/blog/free-software-activities-in-october-2018/</link><dc:creator>Kurt Kremitzki</dc:creator><description>&lt;div&gt;&lt;div class="section" id="intro"&gt;
&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;Welcome to another monthly summary of my free software work. Currently I'm focusing
on improving the state of packaging for FreeCAD and its ecosystem of dependencies
and related packages in Debian Science. Additionally, I recently revived the &lt;a class="reference external" href="https://launchpad.net/~freecad-community/+archive/ubuntu/ppa"&gt;FreeCAD
Community Extras PPA&lt;/a&gt;
as a way of staging these packages out to users for testing. If
you are a FreeCAD user, developer, or simply a user of one of these packages, I would
greatly appreciate your feedback and testing to identify bugs while my packages wait
to make it into the Debian archive.&lt;/p&gt;
&lt;p&gt;However, in the long-term, I plan to move away from spending so much time on Debian
packaging and returning to FreeCAD core development, and a special not-so-secret related project:
PostCAD, providing OpenCASCADE geometry &amp;amp; topology bindings plus CAD data and filetype format support for PostgreSQL, a la PostGIS.
The goal is to build this out as a rich backend which FreeCAD can talk to about neat CAD stuff.
It's a heaping of work, though, so I don't expect to have a public release until mid or late 2019.&lt;/p&gt;
&lt;p&gt;I would like to find others who
are interested in contributing to FreeCAD ecosystem packaging for mentorship. That way,
my efforts are maintained by the community and the quality and availability of packages
won't wane with my attention on them. Since FreeCAD participates in Google Summer of
Code, this would be a great opportunity for interested university students to learn
Debian packaging and improve the state of science &amp;amp; engineering software on Debian.&lt;/p&gt;
&lt;p&gt;Anyway, on to my summary!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="debian-news"&gt;
&lt;h2&gt;Debian News&lt;/h2&gt;
&lt;p&gt;This month, I officially became a Debian Maintainer. This is a basic level of formal
membership in the Debian project, and it comes with limited upload rights to the
archive. I can only upload packages for which I am marked as a maintainer, for example
FreeCAD.&lt;/p&gt;
&lt;p&gt;I took advantage of this to upload some improvements for FreeCAD which I had
been sitting on. After a few tweaks, the package was ready for an upgraded upload
from Experimental to Unstable, which begins the process of candidacy for Testing,
the release pocket for the upcoming Debian 10.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="debian-freecad-gets-qt-5"&gt;
&lt;h2&gt;Debian FreeCAD Gets Qt 5&lt;/h2&gt;
&lt;img alt="/images/freecad-qt5.png" class="align-center" src="/images/freecad-qt5.png"&gt;
&lt;p&gt;Most important about this upload, though was that FreeCAD is finally being built
with Qt 5 support. While Qt 5 had been working for quite a while, we were waiting
on a dependency to be uploaded to Debian, PySide 2, which finally was uploaded this
summer. Because this is a big switch to flip, any testing and reporting of bugs for
this Debian package would be appreciated!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="freecad-package-structure-reorganization"&gt;
&lt;h2&gt;FreeCAD Package Structure Reorganization&lt;/h2&gt;
&lt;p&gt;One of the other major packaging changes for FreeCAD 0.17 is that the package is
no longer a single, monolithic &lt;tt class="docutils literal"&gt;freecad&lt;/tt&gt; package. We now have:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a &lt;tt class="docutils literal"&gt;freecad&lt;/tt&gt; metapackage, which installs the other packages&lt;/li&gt;
&lt;li&gt;common files and resources (e.g. images) in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-common&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-runtime&lt;/span&gt;&lt;/tt&gt; contains Python 2/3 compatible runtime files&lt;/li&gt;
&lt;li&gt;the executable built against Python 2, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-python2&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;and the library files used by the executable, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;libfreecad-python2-0.17&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are several advantages to this approach. The first is that since &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-common&lt;/span&gt;&lt;/tt&gt;
and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-runtime&lt;/span&gt;&lt;/tt&gt; are just pictures, Python scripts, and the like, we can save
space in the archive by only needing one copy of the package, instead of one for each
supported architecture. For &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-python2&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;libfreecad-python2-0.17&lt;/span&gt;&lt;/tt&gt;, one can
see the advantage in the name: since these are Python 2 specific, we will soon be
able to provide their Python 3 counterparts.&lt;/p&gt;
&lt;p&gt;Ideally, by the time of the Debian 10 release, the FreeCAD 0.17 package will provide
both Python 2 and 3 supported versions, and which one you want to use can be switched
between using the &lt;tt class="docutils literal"&gt;alternatives&lt;/tt&gt; system, which I will explain later in this post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="freecad-python-3-imminent"&gt;
&lt;h2&gt;FreeCAD Python 3 Imminent&lt;/h2&gt;
&lt;p&gt;Like Qt 5, FreeCAD has supported Python 3 for quite some time. (Workbenches and
3rd party code are another story.) However, in Debian, a Python 3-enabled FreeCAD
package is blocked by the pending upload of pivy 0.6. I helped coordinate the upstream
release of this package but due to issues with its dependency Coin3D the upload is stalled
until those issues are resolved.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="community-extras-ppa-early-packge-previews"&gt;
&lt;h2&gt;Community Extras PPA - Early Packge Previews&lt;/h2&gt;
&lt;p&gt;Now that we have the Community Extras PPA, it serves as a convenient location for me to upload packages
as soon as I have one completed and ready for testing. Here are my uploads this month.&lt;/p&gt;
&lt;div class="section" id="gmsh-4"&gt;
&lt;h3&gt;Gmsh 4&lt;/h3&gt;
&lt;img alt="/images/gmsh-airplane.png" class="align-center" src="/images/gmsh-airplane.png"&gt;
&lt;p&gt;&lt;a class="reference external" href="http://gmsh.info/"&gt;Gmsh&lt;/a&gt; has released a major version upgrade, which includes removing the
experimental Java API and introducing Julia bindings, although this package doesn't
do anything with them. The current version in the Debian archives is 3.0.6.&lt;/p&gt;
&lt;p&gt;This package is only available on Bionic (Ubuntu 18.04) due to its dependencies. I hadn't tried on
Cosmic (Ubuntu 18.10) since I worked on this in the beginning of October and it wasn't released yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="calculix-2-14"&gt;
&lt;h3&gt;Calculix 2.14&lt;/h3&gt;
&lt;img alt="/images/calculix-turbocharger.jpeg" class="align-center" src="/images/calculix-turbocharger.jpeg"&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.calculix.de/"&gt;CalculiX&lt;/a&gt; in Debian is currently several versions behind (2.11) so I got a request
to package this. However, CalculiX actually spans several packages, but calculix-ccx,
the solver, is the only one used by FreeCAD, so unlike the other packages, this one
is not quite ready for Debian until the other ones are done as well, since they are
separate source packages.&lt;/p&gt;
&lt;p&gt;This package is available on Bionic and Xenial (Ubuntu 16.04).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="translated-freecad-doc-packages"&gt;
&lt;h3&gt;Translated FreeCAD-Doc Packages&lt;/h3&gt;
&lt;p&gt;One of the big areas for improvement in FreeCAD is the state of its documentation, and
I'm glad to announce that one big improvement is on its way. I have been working on
a standalone &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-doc&lt;/span&gt;&lt;/tt&gt; package, since it was removed from the Debian archive for
being derived from pre-compiled binary files. This package involves using a local
synced copy of the FreeCAD Wiki text and images, and using the script that was used
to generate the aforementioned binary files.&lt;/p&gt;
&lt;p&gt;The main improvement my package offers is support for the two most complete translations
of the FreeCAD wiki, French and Italian. This is accomplished by making &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-doc&lt;/span&gt;&lt;/tt&gt;
a metapackage which depends on any one of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-doc-en&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-it&lt;/span&gt;&lt;/tt&gt;, or &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-fr&lt;/span&gt;&lt;/tt&gt; being installed.
Then, the relevant files in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-doc&lt;/span&gt;&lt;/tt&gt; upon which &lt;tt class="docutils literal"&gt;freecad&lt;/tt&gt; will call are in fact
managed symlinks to the appropriate translations. The symlinks are managed by the
&lt;a class="reference external" href="https://wiki.debian.org/DebianAlternatives"&gt;DebianAlternatives&lt;/a&gt; system (see update-alternatives(1).)&lt;/p&gt;
&lt;p&gt;In order to switch between translations if more than one is installed, you can run
&lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;update-alternatives&lt;/span&gt; &lt;span class="pre"&gt;--config&lt;/span&gt; &lt;span class="pre"&gt;freecad-doc&lt;/span&gt;&lt;/tt&gt;. This will control the in-program help for FreeCAD,
so when you click the "What's this?" button, the resultant help page will be the translated version.&lt;/p&gt;
&lt;p&gt;Additionally, compiled PDFs of the FreeCAD help are provided for all three languages.&lt;/p&gt;
&lt;p&gt;One result of the nature of this package is that it is quite large: each &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-doc&lt;/span&gt;&lt;/tt&gt; translated package
weighs in about 300 MB so the combined size is about 1.2 GB, per Ubuntu distribution.&lt;/p&gt;
&lt;p&gt;As a result, this package is only available on Bionic and Xenial.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pycollada-0-6-now-with-python-3"&gt;
&lt;h3&gt;PyCOLLADA 0.6, now with Python 3!&lt;/h3&gt;
&lt;img alt="/images/collada.jpeg" class="align-center" src="/images/collada.jpeg"&gt;
&lt;p&gt;Another package which is fairly out of date in Debian (version 0.4 present), I decided
to update it since &lt;a class="reference external" href="https://github.com/pycollada/pycollada"&gt;pycollada&lt;/a&gt; is a dependency of FreeCAD and I am intrigued by the possibilities
of the &lt;a class="reference external" href="https://en.wikipedia.org/wiki/COLLADA"&gt;COLLADA (COLLAborative Design Activity) format&lt;/a&gt;.
This allows for interchange with interactive 3D applications like Blender.&lt;/p&gt;
&lt;p&gt;The big news with this package is that Python 3 support is now available, so I updated the source packaging
to provide both Python 2 and 3 packages.&lt;/p&gt;
&lt;p&gt;Again due to dependencies, it's only available on Cosmic and Bionic.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sponsors"&gt;
&lt;h2&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;My work on Debian Science and FreeCAD is supported by my patrons at &lt;a class="reference external" href="https://patreon.com/kkremitzki"&gt;https://patreon.com/kkremitzki&lt;/a&gt;. Thank you all very much!&lt;/p&gt;
&lt;p&gt;If you appreciate my work as described in this post, any level of support is greatly appreciated, including moral support!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="social-media"&gt;
&lt;h2&gt;Social Media&lt;/h2&gt;
&lt;p&gt;You can follow me on Twitter at &lt;a class="reference external" href="https://twitter.com/thekurtwk"&gt;@thekurtwk&lt;/a&gt;. I'm also currently working on
a Twitch streaming setup, which I hope to have ready by the end of the year! I'll be trying out some live programming,
engineering, and Linux gaming. &lt;a class="reference external" href="https://www.twitch.tv/kkremitzki"&gt;You can find me at twitch.tv/kkremitzki&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>debian</category><guid>/blog/free-software-activities-in-october-2018/</guid><pubDate>Thu, 08 Nov 2018 05:59:21 GMT</pubDate></item><item><title>Free Software Activities in September 2018</title><link>/blog/free-software-activities-in-september-2018/</link><dc:creator>Kurt Kremitzki</dc:creator><description>&lt;div&gt;&lt;p&gt;Hello all, unfortunately my update comes late again this month, although I have good reason! I just finished landing a job
as a scientific software developer. From the looks of it, I'll mostly be working on things from a systems engineering perspective,
but it'll be in the context of the scientific Python ecosystem as well as involving Qt. This is nice in that while I will have less
free time to spend on FreeCAD, it will almost certainly be of increasingly higher quality.&lt;/p&gt;
&lt;p&gt;Another interesting benefit of the job is that it will allow me to move back to Austin, which has the very well-equipped hackerspace
&lt;a class="reference external" href="http://atxhs.org"&gt;ATX Hackerspace&lt;/a&gt;. I look forward to joining and having a chance to finally experiment with FreeCAD's CNC integrations,
and to have a great space to hack on hardware and software.&lt;/p&gt;
&lt;p&gt;Now, finally, to summarize what I've worked on in the month of September.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;I created a &lt;a class="reference external" href="https://forum.freecadweb.org/viewtopic.php?f=8&amp;amp;t=31046"&gt;thread on the FreeCAD forums&lt;/a&gt; to announce the revival of the
&lt;a class="reference external" href="https://launchpad.net/~freecad-community/+archive/ubuntu/ppa"&gt;FreeCAD Community Extras PPA&lt;/a&gt;. This will be used to host packages of interest
to the FreeCAD community, and things that need testing for possible future inclusion in FreeCAD. In retrospect, I should have used this PPA to get
testers for the packages I was working on during my last Google Summer of Code.&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;To this FreeCAD Community Extras PPA, I uploaded packages for:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/aewallin/opencamlib"&gt;OpenCAMLIB&lt;/a&gt;, a C++ library with Python bindings for creating 3D toolpaths for CNC machines such as mills and lathes.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/aewallin/openvoronoi"&gt;OpenVoronoi&lt;/a&gt;, another C++/Python library for 2D Voronoi diagrams for point and line-segment sites.&lt;/li&gt;
&lt;li&gt;Laughlin Research's standalone &lt;a class="reference external" href="https://github.com/LaughlinResearch/SMESH"&gt;SMESH&lt;/a&gt;, the Salome meshing framework.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/NGSolve/netgen"&gt;Netgen&lt;/a&gt;'s latest release, 6.2.1807, a 3D tetrahedral mesh generator.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/IfcOpenShell/IfcOpenShell"&gt;IfcOpenShell&lt;/a&gt;, an open source Python IFC library and geometry engine.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/ifcquery/ifcplusplus"&gt;IfcPlusPlus&lt;/a&gt;, an open source C++ class model, reader, and writer for IFC files with simple Qt/OpenSceneGraph viewer application.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;I have long been interested in having CAD database support, and I spent quite a bit of September working with my friend on research and initial work for this. From what we've found,
we can feasibly have a PostgreSQL extension similar to PostGIS, but for CAD: &lt;a class="reference external" href="https://github.com/postcad"&gt;PostCAD&lt;/a&gt;. This would mainly involve a marriage between &lt;a class="reference external" href="https://www.opencascade.com/"&gt;OpenCASCADE&lt;/a&gt;, the C++ geometry and topology kernel of FreeCAD,
and &lt;a class="reference external" href="https://github.com/jtv/libpqxx"&gt;libpqxx&lt;/a&gt;, the official C++ client library for PostgreSQL. The potential for such an extension would be huge, with all the power and features
of PostgreSQL with an understanding of CAD data and geometry. For example, FreeCAD could interface with this database, and have the database take care of things like editing locks
for models, permissions for readingn and writing of models, and so forth. Furthermore, by creating a database-level abstraction for CAD, that opens the way for web abstractions
for CAD, similar to GeoDjango's GIS extensions for Django. That work could one day pave the way for a web interface for FreeCAD.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As always, if you appreciate the work I do with FreeCAD, the Debian Science Team, and Open Engineering on Linux, any level of support would be appreciated
&lt;a class="reference external" href="https://patreon.com/kkremitzki"&gt;on my Patreon!&lt;/a&gt; Currently this money helps offset server costs for some of the experimental FreeCAD community stuff.
I would like to continue to use it to offset my costs for FreeCAD development and equipment. If I can reach my current goal of $100/month, I'd like to
use it to purchase a &lt;a class="reference external" href="https://www.pine64.org/?page_id=3707"&gt;Pinebook, a $99 ARM64 laptop&lt;/a&gt; which I could use for FreeCAD &amp;amp; Debian ARM development.
I'd really like FreeCAD to be usable (and not painfully slow) on ARM since its low-cost nature means it is highly available for educational institutions.
Maybe one day I'll even be able to afford milling/CNC equipment so I can see just how far FreeCAD integration can take us!&lt;/p&gt;&lt;/div&gt;</description><category>debian</category><guid>/blog/free-software-activities-in-september-2018/</guid><pubDate>Sun, 14 Oct 2018 03:47:15 GMT</pubDate></item><item><title>Free Software Activities in August 2018</title><link>/blog/free-software-activities-in-august-2018/</link><dc:creator>Kurt Kremitzki</dc:creator><description>&lt;div&gt;&lt;p&gt;Hello all! After reading some of the nice activity logs published by members of the
Debian Project at &lt;a class="reference external" href="https://planet.debian.org"&gt;https://planet.debian.org&lt;/a&gt;, I've decided to publish my own version.
This will mostly be my work on FreeCAD and Debian, but will also include other points
of note from my many interests. I'll also include relevant activities for &lt;a class="reference external" href="https://www.patreon.com/kkremitzki"&gt;my supporters
on Patreon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As covered in my previous post, most of the first half of August was spent finishing
my Google Summer of Code project for FreeCAD, which largely turned into "packaging
for the Debian Science Team" since FreeCAD's dependency chain and options for
integration are so vast. However, the nature of the work is highly parallel.
For example, when packaging, most issues occur either almost immediately into the build,
or after the build has finished. This means that after an initial bit of packaging work
that allows a build to actually proceed, one then has to launch the build and wait
anywhere from a few minutes to a few hours to see the next issue arise. So, as a
result, I worked on &lt;em&gt;many&lt;/em&gt; packages in parallel. A negative consequence of this was
that I somewhat overloaded my plate in terms of things I can handle, so in actuality
this meant I would work on a handful of packages on several machines at once, and then
once those issues were largely resolved I would move onto another handful, rather
than really juggling them all at once.&lt;/p&gt;
&lt;p&gt;After finishing GSoC, I first turned my attention to two of the packages I had
worked on in parallel, python-fluids and python-ulmo.&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://tracker.debian.org/pkg/python-fluids"&gt;python-fluids&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I made a new upload for this package to correct several issues. Here's an excerpt from the changelog:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* [1215102] Make python-fluids-doc Multi-Arch: foreign
* [eb610fd] Correct Vcs-* fields
* [62570cd] Updated to Standards-Version 4.2.0, no change required
* [29e96a7] Correct debian/watch
* [3e90d05] Add missing scipy dependency
* [cd776a2] Add lintian override for
  package-contains-documentation-outside-usr-share-doc
&lt;/pre&gt;
&lt;p&gt;The package still fails some reproducibility tests on i386 and could use a standards version bump, but other
than that, this package is almost completely clean now! It's quite satisfying cleaning up these packages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://tracker.debian.org/pkg/python-ulmo"&gt;python-ulmo&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I made an upload for this package as well:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* [7150daa] Correct Vcs-* fields
* [027b50b] Mark python-ulmo-doc as Multi-Arch: foreign
* [d72b6f6] Add patch to fix FutureWarning
&lt;/pre&gt;
&lt;p&gt;The package was failing its autopkgtests because Python was emitting a FutureWarning onto stderr.
This package is actually fully reproducible, and only needs a standards version bump to be fully clean.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://tracker.debian.org/pkg/gmsh"&gt;gmsh&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On August 22nd, &lt;a class="reference external" href="http://gmsh.info/"&gt;Gmsh 4.0.0 was released!&lt;/a&gt; The Java API was removed and a Julia one added.
This is a nice release because in
&lt;a class="reference external" href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=904946"&gt;Debian bug #904946&lt;/a&gt; it was found that the Gmsh package, after being updated to
be built against OCCT instead of OCE, actually no longer worked when used in FreeCAD, giving the error:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Error   : Gmsh requires OpenCASCADE to import shape
&lt;/pre&gt;
&lt;p&gt;My hope was that by updating to the new Gmsh version, this problem would resolve itself. However, I ran into a few problems and had to postpone
finishing up.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://tracker.debian.org/pkg/netgen"&gt;netgen&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;On August 19th, &lt;a class="reference external" href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=906619"&gt;Debian bug #906619&lt;/a&gt; was reported against Netgen, which was
an occasion to look at the state of the package. I noticed that upstream had released version 6.2.1807 (versus the current .1804) but
it was not tagged in the Netgen repository, only as a submodule of the &lt;a class="reference external" href="https://github.com/ngsolve/ngsolve"&gt;Ngsolve repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On August 31st, I packaged the new version and resolved the bug
in &lt;a class="reference external" href="https://salsa.debian.org/science-team/netgen/merge_requests/9/commits"&gt;science-team/netgen PR #9&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="salome-smesh"&gt;
&lt;h2&gt;salome-smesh&lt;/h2&gt;
&lt;p&gt;Although technically not August, on September 3rd I pushed the &lt;a class="reference external" href="https://salsa.debian.org/kkremitzki-guest/salome-smesh"&gt;nearly finished package for a standalone salome-smesh on Salsa&lt;/a&gt;
which is fully functional except for an issue with the CMake config file. I submitted a pull request to support multi-arch for the package
but forgot to update the path in the CMake config file, so the variables therein have to be manually set, or the file edited.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cantera"&gt;
&lt;h2&gt;cantera&lt;/h2&gt;
&lt;p&gt;On August 24th, Cantera 2.4.0 was released:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Cantera is an open-source suite of tools for problems involving chemical kinetics, thermodynamics, and transport processes.
&lt;/pre&gt;
&lt;p&gt;Previously there had been an issue with the build, where the packages would be made successfully, but attempting to &lt;cite&gt;import cantera&lt;/cite&gt; in
Python would error out, presumably due to the way an included copy of libfmt was handled during the build. However, the issue is no longer
present, so I now have a working Cantera 2.4.0 package! The only shortcoming is that I don't have working docs build yet, so this package
didn't make it in time for August.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://tracker.debian.org/pkg/openfoam"&gt;openfoam&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Previously I had submitted a pull request for OpenFOAM 6 to the Debian Science Team, but spontaneously the package began to fail,
presumably due to some change in a dependency. I spent some time troubleshooting this issue but haven't found a resolution yet.
Here's a snippet of the build failure:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Allwmake src/Pstream
wmake dummy
wmakeLnIncludeAll: running wmakeLnInclude on dependent libraries:
    wmakeLnInclude: linking include files to /build/openfoam-6.20180805+dfsg1/src/OpenFOAM/lnInclude
    wmakeLnInclude: linking include files to /build/openfoam-6.20180805+dfsg1/src/OSspecific/POSIX/lnInclude
make[2]: Entering directory '/build/openfoam-6.20180805+dfsg1/src/Pstream/dummy'
wmakeLnInclude: linking include files to ./lnInclude
make[2]: Leaving directory '/build/openfoam-6.20180805+dfsg1/src/Pstream/dummy'
make[2]: Entering directory '/build/openfoam-6.20180805+dfsg1/src/Pstream/dummy'
Making dependency list for source file UOPwrite.C
realloc(): invalid next size
make[2]: *** Deleting file '/build/openfoam-6.20180805+dfsg1/platforms/linux64GccDPInt32Opt/src/Pstream/dummy/UOPwrite.C.dep'
Making dependency list for source file UIPread.C
realloc(): invalid next size
make[2]: *** Deleting file '/build/openfoam-6.20180805+dfsg1/platforms/linux64GccDPInt32Opt/src/Pstream/dummy/UIPread.C.dep'
Making dependency list for source file UPstream.C
realloc(): invalid next size
make[2]: *** Deleting file '/build/openfoam-6.20180805+dfsg1/platforms/linux64GccDPInt32Opt/src/Pstream/dummy/UPstream.C.dep'
&lt;/pre&gt;
&lt;p&gt;I'll have to continue investigating this one.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://tracker.debian.org/pkg/pyside2"&gt;pyside2&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I reported &lt;a class="reference external" href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=906020"&gt;Debian bug #906020&lt;/a&gt; about missing Python 3 CMake config files,
which was fixed Aug 28th. I began investigating how this would Pivy builds, but got sidetracked by a problem with the &lt;cite&gt;med-fichier&lt;/cite&gt; package.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="reference external" href="https://tracker.debian.org/pkg/freecad"&gt;freecad&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I ran into some build issues trying to update the package now that my Debian Unstable workstation is running Qt 5.11:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
error: invalid use of incomplete type ‘class QAction’
     QAction* action = new QAction(tr("Remove"), this);
&lt;/pre&gt;
&lt;p&gt;There are several instances of this throughout the codebase that can basically be fixed with by adding some &lt;cite&gt;#include&lt;/cite&gt; s.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="projectchrono"&gt;
&lt;h2&gt;projectchrono&lt;/h2&gt;
&lt;p&gt;There was a bit of discussion about utilization of &lt;a class="reference external" href="http://www.projectchrono.org/"&gt;Project Chrono&lt;/a&gt;, an open source multi-physics simulation engine,
in FreeCAD. One problem with pursuing this is that it isn't packaged at all for Debian, which is rather surprising! It seems like high-quality software.
I began looking at packaging it and it actually doesn't seem that bad. One of the main issues is actually the naming: it's really long! There's also a
bit of worry about naming collisions I'll have to look into. As of now, I have a working package except for the Python bindings. Enabling them results
in this failure in the build process:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[ 53%] Building CXX object src/demos/irrlicht/CMakeFiles/demo_IRR_soilbin.dir/demo_IRR_soilbin.cpp.o
cd /build/project-chrono-3.0.0/obj-x86_64-linux-gnu/src/demos/irrlicht &amp;amp;&amp;amp; /usr/lib/ccache/c++  -DBP_USE_FIXEDPOINT_INT_32 -I/build/project-chrono-3.0.0/src -I/build/project-chrono-3.0.0/obj-x86_64-linux-gnu -I/build/project-chrono-3.0.0/src/chrono -I/build/project-chrono-3.0.0/src/chrono/collision/bullet -I/build/project-chrono-3.0.0/src/chrono/collision/gimpact -I/build/project-chrono-3.0.0/src/chrono/collision/convexdecomposition/HACD -I/usr/include/irrlicht  -g -O2 -fdebug-prefix-map=/build/project-chrono-3.0.0=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -pthread -fopenmp  -march=native -msse4.2 -mfpmath=sse  -march=native -mavx2  -march=native -mfma  -std=c++14 -pthread -fopenmp  -march=native -msse4.2 -mfpmath=sse  -march=native -mavx2  -march=native -mfma    -std=c++14 -pthread -fopenmp  -march=native -msse4.2 -mfpmath=sse  -march=native -mavx2  -march=native -mfma  -o CMakeFiles/demo_IRR_soilbin.dir/demo_IRR_soilbin.cpp.o -c /build/project-chrono-3.0.0/src/demos/irrlicht/demo_IRR_soilbin.cpp
/build/project-chrono-3.0.0/obj-x86_64-linux-gnu/swig/ChModuleCorePYTHON_wrap.cxx: In member function 'virtual void chrono::ChLogPython::Output(const char*, size_t)':
/build/project-chrono-3.0.0/obj-x86_64-linux-gnu/swig/ChModuleCorePYTHON_wrap.cxx:7610:23: error: format not a string literal and no format arguments [-Werror=format-security]
     PySys_WriteStdout(buffer);
                       ^~~~~~
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="opencamlib"&gt;
&lt;h2&gt;opencamlib&lt;/h2&gt;
&lt;p&gt;There was a problem with this package's doc depends, which I fixed at the end of August. However, it's still awaiting sponsorship to be uploaded
into the Debian archives.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="med-fichier"&gt;
&lt;h2&gt;med-fichier&lt;/h2&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://tracker.debian.org/pkg/med-fichier"&gt;med-fichier package&lt;/a&gt; in Debian currently is built with autotools but somewhat supports CMake builds, which
would be nice to switch to as it would provide CMake configuration files in libmedc-dev. I worked on updating the package, but currently building docs is broken,
and for some reason, the Fortran library is being statically linked.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="planet-freecad"&gt;
&lt;h2&gt;Planet FreeCAD&lt;/h2&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://tracker.debian.org/pkg/planet-venus"&gt;planet-venus package&lt;/a&gt; in Debian is available for running your own RSS feed aggregation service.
I wanted to set up a planet.freecad.io to provide exactly that. However, the current version of the package is broken, and it only works in Debian 7, a.k.a. old-old-stable.&lt;/p&gt;
&lt;p&gt;I spent some time researching the state of the package, but it's fairly rough, and most importantly, upstream is far from active. I'd like to run the RSS service but
fixing the package seems like a tall order.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="freecad-io"&gt;
&lt;h2&gt;freecad.io&lt;/h2&gt;
&lt;p&gt;We previously had two servers available to run some of the web services for the FreeCAD project, but sadly they rebooted but never came back online.&lt;/p&gt;
&lt;p&gt;I'm now paying for a VPS in Frankfurt using the money from &lt;a class="reference external" href="https://patreon.com/kkremitzki"&gt;my Patreon&lt;/a&gt;. Unfortunately, it's a bit resource-strained
from the FreeIPA server hogging things.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="if-you-like-my-work-as-described-above-and-would-like-to-support-me-continuing-to-improve-the-state-of-open-engineering-on-linux-please-contribute-to-my-patreon"&gt;
&lt;h2&gt;If you like my work as described above and would like to support me continuing to improve the state of open engineering on Linux, &lt;a class="reference external" href="https://patreon.com/kkremitzki"&gt;please contribute to my Patreon!&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>debian</category><guid>/blog/free-software-activities-in-august-2018/</guid><pubDate>Wed, 12 Sep 2018 10:20:13 GMT</pubDate></item></channel></rss>