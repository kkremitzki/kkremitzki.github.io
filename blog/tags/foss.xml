<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>Biosystems Engineering Blog (Posts about foss)</title><link>https://kkrem.it/zki/</link><description></description><atom:link href="/blog/tags/foss.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Fri, 03 Feb 2017 23:57:27 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Getting Started with FreeCAD Development in Ubuntu 16.04</title><link>/blog/getting-started-with-freecad-development-in-ubuntu-1604/</link><dc:creator>Kurt Kremitzki</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.freecadweb.org/"&gt;FreeCAD&lt;/a&gt; is a multi-platform (Windows, Mac, Linux) open source parametric 3D CAD modeler, and can read
and write many open file formats.&lt;/p&gt;
&lt;p&gt;An explanation of the many virtues of open source software can be found at &lt;a class="reference external" href="http://opensourceforamerica.org/learn-more/benefits-of-open-source-software/"&gt;Open Source for America&lt;/a&gt; and elsewhere. To quote OSFA,&lt;/p&gt;
&lt;blockquote&gt;
The Open Source model harnesses the power of distributed peer review and transparency to create high-quality, secure
and easily integrated software at an accelerated pace and lower cost.&lt;/blockquote&gt;
&lt;p&gt;Commerical-grade CAD software, while incredibly useful, has several downsides including being locked behind 4 or 5 digit licensing costs,
and its use in amateur projects or the developing world is often facilitated by piracy. FreeCAD, on the other hand, is free as in beer
and free as in freedom, although it is currently under development. However, one of the benefits of the open source model is the ease
with which interested people can contribute to the project and make better tools for all mankind.&lt;/p&gt;
&lt;p&gt;While using FreeCAD, I noticed a few typos in the menus; although my first contribution to the project wasn't too significant, I
documented the process of getting a development environment set up on my Ubuntu 16.04 desktop so that others could follow the same
steps and begin contributing.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Pull down a copy of the code. (If you don't have a copy of git, run &lt;tt class="docutils literal"&gt;sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install git&lt;/tt&gt;.)&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_65dc30523bdd414c857fc0c876bcd1ac-1"&gt;&lt;/a&gt;git clone https://github.com/FreeCAD/FreeCAD.git freecad-code
&lt;a name="rest_code_65dc30523bdd414c857fc0c876bcd1ac-2"&gt;&lt;/a&gt;mkdir freecad-build
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;Install all dependencies.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-1"&gt;&lt;/a&gt;sudo apt-get install build-essential cmake python python-matplotlib libtool libcoin80-dev &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-2"&gt;&lt;/a&gt;  libsoqt4-dev libxerces-c-dev libboost-dev libboost-filesystem-dev libboost-regex-dev  &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-3"&gt;&lt;/a&gt;  libboost-program-options-dev libboost-signals-dev libboost-thread-dev libboost-python-dev &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-4"&gt;&lt;/a&gt;  libqt4-dev libqt4-opengl-dev qt4-dev-tools python-dev python-pyside pyside-tools &lt;span class="s1"&gt;'liboce*-dev'&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-5"&gt;&lt;/a&gt;  oce-draw libeigen3-dev libqtwebkit-dev libshiboken-dev libpyside-dev libode-dev swig libzipios++-dev &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-6"&gt;&lt;/a&gt;  libfreetype6 libfreetype6-dev
&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Install optional packages&lt;/span&gt;
&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-9"&gt;&lt;/a&gt;sudo apt-get install libsimage-dev checkinstall python-pivy python-qt4 doxygen &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_fe438200d9194be19c323eb420b89c9e-10"&gt;&lt;/a&gt;  libcoin80-doc libspnav-dev
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;Move into build folder, make and compile the software. Use the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-j&lt;/span&gt; $(nproc)&lt;/tt&gt; flag to use all N of your CPU cores
when compiling; some recommend using N + 1 CPU cores, which can be done by instead running &lt;tt class="docutils literal"&gt;make &lt;span class="pre"&gt;-j$((&lt;/span&gt; $(nproc) + 1 )) .&lt;/tt&gt;.
Don't forget the period at the end of the &lt;tt class="docutils literal"&gt;make&lt;/tt&gt; command, which tells it to put the compiled software in the current
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-build&lt;/span&gt;&lt;/tt&gt; directory; it's good to keep the source code and build directories separate.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_28cd9b20df36478280671f9071990633-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; freecad-build
&lt;a name="rest_code_28cd9b20df36478280671f9071990633-2"&gt;&lt;/a&gt;cmake ../freecad-code
&lt;a name="rest_code_28cd9b20df36478280671f9071990633-3"&gt;&lt;/a&gt;make -j&lt;span class="k"&gt;$(&lt;/span&gt;nproc&lt;span class="k"&gt;)&lt;/span&gt; .
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;ol class="arabic simple" start="4"&gt;
&lt;li&gt;Fix Ubuntu 64-bit issue. If you are using a 64-bit version of Ubuntu (hopefully), you may run in to the following
error message, which occurs because the expected &lt;tt class="docutils literal"&gt;libfreeimage.so&lt;/tt&gt; file was moved into a subdirectory of &lt;tt class="docutils literal"&gt;/usr/lib/&lt;/tt&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_42f85136bf9244b7b53fad8bb148d1f1-1"&gt;&lt;/a&gt;make&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;: *** No rule to make target &lt;span class="s1"&gt;'/usr/lib/libfreeimage.so'&lt;/span&gt;, needed by &lt;span class="s1"&gt;'lib/libSMDS.so'&lt;/span&gt;.  Stop.
&lt;a name="rest_code_42f85136bf9244b7b53fad8bb148d1f1-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_42f85136bf9244b7b53fad8bb148d1f1-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Fix with this line.&lt;/span&gt;
&lt;a name="rest_code_42f85136bf9244b7b53fad8bb148d1f1-4"&gt;&lt;/a&gt;sudo ln -s /usr/lib/x86_64-linux-gnu/libfreeimage.so /usr/lib
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;Once the build is complete, a runnable copy of the FreeCAD executable will be in the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;freecad-build&lt;/span&gt;&lt;/tt&gt; folder. Any changes
made to the source code can be tested after re-compiling the executable.&lt;/p&gt;
&lt;p&gt;Hopefully this post helps someone out there! Even if you are only contributing to the documentation as you learn FreeCAD,
your contribution is valuable and can help tons of people across the globe.&lt;/p&gt;&lt;/div&gt;</description><category>cad</category><category>foss</category><category>linux</category><guid>/blog/getting-started-with-freecad-development-in-ubuntu-1604/</guid><pubDate>Sun, 05 Jun 2016 11:17:51 GMT</pubDate></item></channel></rss>